/**
 * match()
 *
 * 구분 - 데이터(값)
 * data - 매치 대상
 * 파라미터 - 정규표현식, 문자열
 * 반환 - [매치 결과]
 *
 * - 매치 결과를 배열로 반환
 *    - 매치 대상에 정규 표현식의 패턴을 적용하여
 *      매치하고 매치 결과를 반환 [코드1]
 *    - 문자열 작성 가능,
 *      엔진이 정규 표현식으로 변환하여 매치
 * - 정규 표현식
 *    - 문자열을 패턴으로 매치
 *    - 패턴(pattern) 형태: ^, $, *, + 등
 */
console.log("[코드1] 정규 표현식의 패턴 매치");
let value = "Sports";
console.log(value.match(/s/));  // [s]
console.log(value.match("spo"));  // null
/**
 * 1. 매치는 정규 표현식 용어
 * 2. match(/s/)에서
 *    /s/는 정규 표현식으로 소문자를 s를 매치
 * 3. "Sports" 끝에 s가 있으므로 매치되며
 *    매치된 문자를 배열로 반환
 * 4. match("spo")에 spo가 있으나
 *    대문자 s이므로 null 반환
 */

/**
 * replace()
 *
 * 구분 - 데이터(값)
 * data - 치환 대상
 * 파라미터 - 정규 표현식, 문자열
 *        - 대체할 값, 함수
 * 반환 - 치환 결과
 *
 * - 매치 결과를
 *   파라미터에 작성한 값으로 대체하여 반환
 * - 두번째 파라미터에 함수를 작성하면
 *   먼저 함수를 실행하고
 *   함수에서 반환한 값으로 대체 [코드2]
 */
console.log("[코드2] 문자열 대체");
let value2 = "abcabc";
console.log(value2.replace("a", "바꿈")); // 바꿈bcabc
console.log(value2.replace(/a/, "바꿈")); // 바꿈bcabc

function change() {
  return "함수";
};
console.log(value2.replace(/a/, change())); // 함수bcabc
/**
 * 1. /a/는 처음 하나만 바꿈
 * 2. 함수를 실행하고 반환된 값으로 바꿈
 */

/**
 * search()
 *
 * 구분 - 데이터(값)
 * data - 검색 대상
 * 파라미터 - 정규 표현식, 문자열
 * 반환 - 매치된 인덱스
 *
 * - 검색된 첫번째 인덱스 반환
 *    - 매치되지 않으면 -1 반환 [코드3]
 */
console.log("[코드3] 매치된 첫 번째 인덱스 반환");
let value3 = "cbacba";
console.log(value3.search(/a/));  // 2
console.log(value3.search("K"));  // -1
/**
 * 1. 매치된 첫 번째 인덱스 반환
 * 2. K가 없으므로 매치되지 않음
 *    매치되지 않으면 -1 반환
 */

/**
 * split()
 *
 * 구분 - 데이터(값)
 * data - 분리 대상
 * 파라미터 - 분리자: 정규 표현식, 문자열
 *        - 반환 수
 * 반환 - 결과
 *
 * - 분리 대상을 분리자로
 *   분리하여 배열로 반환 [코드4]
 * - 분리자를 작성하지 않은 경우 [코드5]
 * - 두번째 파라미터에 반환 수를 작성 [코드6]
 */
console.log("[코드4] 분리자 작성");
console.log("12_34_56".split("_")); // ["12", "34", "56"]
/**
 * 1. "_"를 분리자로 사용
 * 2. "12_34_56"을 "_"로 분리
 */

console.log("[코드5] 분리자를 작성하지 않음");
let value4 = "123";
console.log(value4.split(""));  // ["1", "2", "3"]
console.log(value4.split());  // ["123"]
/**
 * 1. 분리자에 빈 문자열을 작성하면
 *    문자를 하나씩 분리하여 반환
 * 2. 분리자를 작성하지 않으면
 *    분리 대상 전체를 하나의 배열로 반환
 */

console.log("[코드6] 두 번째에 숫자 작성");
let value5 = "12_34_56_78";
console.log(value5.split("_", 3));  // ['12', '34', '56']

value5 = "123";
console.log(value5.split("A")); // ['123']
/**
 * 1. 두 번째 파라미터에 숫자를 작성하면
 *    앞에서부터 수만큼만 반환
 * 2. 분리자가 분리 대상에 없으면
 *    분리 대상 전체를 하나의 배열로 반환
 */