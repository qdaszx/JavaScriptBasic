/**
 * indexOf()
 *
 * 구분 - 데이터(값)
 * data - 검색 대상
 * 파라미터 1. 검색할 값
 *        2. 검색 시작 인덱스, 디폴트: 0
 * 반환 - 검색된 인덱스
 *
 * - 파라미터 값과 같은 엘리먼트의 인덱스 반환
 *    - 왼쪽에서 오른쪽으로 검색
 *    - 값이 같은 엘리먼트가 있으면 검색 종료 [코드1]
 *    - 데이터 타입까지 체크 [코드2]
 * - 두 번째 파라미터의 인덱스부터 검색 [코드3]
 * - String과 Array의 indexOf() 차이 [코드4]
 */
console.log("[코드1] 왼쪽에서 오른쪽으로 검색");
let value = [1, 2, 5, 2, 5];
console.log(value.indexOf(5));  // 2
/**
 * 1. 배열의 왼쪽부터 5를 검색
 * 2. 2번 인덱스에 5가 있으므로 2를 반환
 */

console.log("[코드2] 데이터 타입까지 체크");
let value2 = [1, 2, 5, 2, 5];
console.log(value2.indexOf("5")); // -1
/**
 * 1. 배열의 왼쪽부터 "5"를 검색
 * 2. 2번과 4번 인덱스에 5가 있지만 타입이 다름
 * 3. 같은 값이 없으면 -1을 반환합니다.
 */

console.log("[코드3] 두 번째 파라미터 작성");
let value3 = [1, 2, 5, 2, 5];
console.log(value3.indexOf(5, 3));  // 4
/**
 * 1. 3번 인덱스부터 5를 검색
 * 2. 2번 인덱스에 5가 있지만
 *    3번 인덱스부터 검색하므로 4가 반환됩니다.
 */

console.log("[코드4] indexOf() 차이");
console.log("ABCBC".indexOf("C", -2));  // 2
let list = ["A", "B", "C", "B", "C"];
console.log(list.indexOf("C", -2)); // 4
/**
 * 1. 두 번째 파라미터에 음수를 작성했을 때
 *    검색 방법이 다릅니다.
 * 2. String 오브젝트는 0으로 간주하여 처음부터 검색
 *    ABCBC에서 C가 2번 인덱스에 있으므로 2를 반환
 * 3. Array 오브젝트는 음수에 length를 더해
 *    시작 인덱스로 사용.
 *    -2 + length(5) = 3
 *    2번 인덱스에 C가 있지만 4번 인덱스를 반환
 */

/**
 * lastIndexOf()
 *
 * 구분 - 데이터(값)
 * data - 검색 대상
 * 파라미터 1. 검색할 값
 *        2. 검색 시작 인덱스opt
 * 반환 - 검색된 인덱스
 *
 * - 파라미터 값과 같은 엘리먼트의
 *    - 마지막 인덱스 반환
 *    - 다른 처리 방법은 indexOf()와 같음 [코드5]
 */
console.log("[코드5] 마지막 인덱스 반환");
let value4 = [1, 2, 5, 2, 5];
console.log(value4.lastIndexOf(5)); // 4